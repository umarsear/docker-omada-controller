services:
  omada-controller:
    container_name: omada-controller
    image: mbentley/omada-controller:5.15
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 4096
        hard: 8192
    stop_grace_period: 60s
    environment:
      - PUID=508
      - PGID=508
      - MANAGE_HTTP_PORT=8088      # Keep this, Omada needs it internally
      - MANAGE_HTTPS_PORT=8043     # IMPORTANT: Omada will serve HTTPS here internally
      - PORTAL_HTTP_PORT=8088
      - PORTAL_HTTPS_PORT=8843
      - PORT_REDIRECT_DISABLED=true # Keep this, might mitigate some internal redirects
      # ... (rest of environment variables unchanged)
      - SSL_CERT_NAME=tls.crt      # Omada will use its self-signed cert on 8043
      - SSL_KEY_NAME=tls.key
      - TZ=Etc/UTC
    ports:
      # Do NOT expose 8043 to the host if only Traefik is meant to access it.
      # Traefik will connect directly to the container's 8043 port on the internal Docker network.
      #
      # Keep other non-web ports for device communication.
      - 27001:27001/udp
      - 29810:29810/udp
      - '29811:29811'
      - '29812:29812'
      - '29813:29813'
      - '29814:29814'
      - '29815:29815'
      - '29816:29816'
    volumes:
      - omada-data:/opt/tplink/EAPController/data
      - omada-logs:/opt/tplink/EAPController/logs
    labels:
      - traefik.docker.network=dokploy-network
      - traefik.enable=true # Ensure Traefik is enabled for this service

      # === HTTP Router (Port 80) for Redirect ===
      - traefik.http.routers.makerusa-omada-cbr3cx-9-web.rule=Host(`omada.makerusa.net`)
      - traefik.http.routers.makerusa-omada-cbr3cx-9-web.entrypoints=web
      - traefik.http.routers.makerusa-omada-cbr3cx-9-web.middlewares=redirect-to-https@file # This is good!

      # === HTTPS Router (Port 443) ===
      - traefik.http.routers.makerusa-omada-cbr3cx-9-websecure.rule=Host(`omada.makerusa.net`)
      - traefik.http.routers.makerusa-omada-cbr3cx-9-websecure.entrypoints=websecure
      - traefik.http.routers.makerusa-omada-cbr3cx-9-websecure.tls=true # Enable TLS
      - traefik.http.routers.makerusa-omada-cbr3cx-9-websecure.tls.certresolver=letsencrypt # Your Let's Encrypt resolver

      # --- Service Definitions ---
      # This service definition is for connections *to Omada's internal HTTPS port*.
      - traefik.http.services.omada-https-internal.loadbalancer.server.port=8043 
      # Very important: Tell Traefik to *not* verify the self-signed certificate.
      # Otherwise, Traefik will complain about the untrusted certificate from Omada.
      - traefik.http.services.omada-https-internal.loadbalancer.servers.transport=insecure-omada-transport@docker 
      
      # Now, connect both routers to this new service
      - traefik.http.routers.makerusa-omada-cbr3cx-9-web.service=omada-https-internal # Redirected HTTP points here
      - traefik.http.routers.makerusa-omada-cbr3cx-9-websecure.service=omada-https-internal # HTTPS points here

    networks:
      - dokploy-network
volumes:
  omada-data: null
  omada-logs: null
networks:
  dokploy-network:
    external: true
